name: Extract File Paths on Error

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-errors:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests or commands (simulate error log creation)
        run: |
          # Replace this with the actual command that generates the error log
          echo "Simulating error" > error_log.txt

      - name: Check for errors
        id: check_errors
        run: |
          if grep -q 'file :' error_log.txt; then
            echo "Errors found"
            echo "::set-output name=errors::true"
          else
            echo "No errors found"
            echo "::set-output name=errors::false"
          fi

  extract-file-paths:
    needs: check-errors
    if: steps.check_errors.outputs.errors == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract file paths from error log
        run: |
          grep -o 'file : [^)]*' error_log.txt | sed 's/file : //' > file_paths.txt
          cat file_paths.txt

      - name: Upload file paths as artifact
        uses: actions/upload-artifact@v2
        with:
          name: file-paths
          path: file_paths.txt


// Create a mirror
		var mirror = createMirror(this);
		
		// Style the mirror
		mirror.style.display = 'none';
		mirror.style.wordWrap = 'break-word';
		mirror.style.whiteSpace = 'pre-wrap';
		mirror.style.padding = jQuery(this).css('paddingTop') + ' ' + 
			jQuery(this).css('paddingRight') + ' ' + 
			jQuery(this).css('paddingBottom') + ' ' + 
			jQuery(this).css('paddingLeft');
		mirror.style.borderStyle = jQuery(this).css('borderTopStyle') + ' ' + 
			jQuery(this).css('borderRightStyle') + ' ' + 
			jQuery(this).css('borderBottomStyle') + ' ' + 
			jQuery(this).css('borderLeftStyle');
		mirror.style.borderWidth = jQuery(this).css('borderTopWidth') + ' ' + 
			jQuery(this).css('borderRightWidth') + ' ' + 
			jQuery(this).css('borderBottomWidth') + ' ' + 
			jQuery(this).css('borderLeftWidth');
			
		mirror.style.width = jQuery(this).css('width');
		mirror.style.fontFamily = jQuery(this).css('font-family');
		mirror.style.fontSize = jQuery(this).css('font-size');
		mirror.style.lineHeight = jQuery(this).css('line-height');
		mirror.style.letterSpacing = jQuery(this).css('letter-spacing');
		// Style the textarea
		this.style.overflow = "hidden";
		this.style.minHeight = this.rows+"em";
		// Bind the textarea's event
		this.onkeyup = growTextarea;
		this.onfocus = growTextarea;
		// Fire the event for text already present
		sendContentToMirror(this);
